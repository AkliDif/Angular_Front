{"ast":null,"code":"import { TICKETS_MOCKED } from '../../mocks/tickets.mock';\n// import { BehaviorSubject } from 'rxjs/index';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let TicketService = /*#__PURE__*/(() => {\n  class TicketService {\n    constructor() {\n      /**\r\n       * Services Documentation:\r\n       * https://angular.io/docs/ts/latest/tutorial/toh-pt4.html\r\n       */\n      this.ticketList = TICKETS_MOCKED;\n      /**\r\n       * Observable which contains the list of the tickets.\r\n       * Naming convention: Add '$' at the end of the variable name to highlight it as an Observable.\r\n       */\n      this.tickets$ = new BehaviorSubject(this.ticketList);\n    }\n    addTicket(ticket) {\n      // You need here to update the list of ticket and then update our observable (Subject) with the new list\n      // More info: https://angular.io/tutorial/toh-pt6#the-searchterms-rxjs-subject\n      this.ticketList.push(ticket);\n      this.tickets$.next(this.ticketList);\n    }\n    deleteTicket(ticket) {\n      // remove an element from ana array https://www.angularjswiki.com/angular/how-to-remove-an-element-from-array-in-angular-or-typescript/\n      this.ticketList.forEach((element, index) => {\n        if (element == ticket) {\n          // this.ticketList.splice(index,1);// remove 1 element at index\n          this.ticketList[index].archived = true; //archivage du ticket\n        }\n      });\n\n      this.tickets$.next(this.ticketList);\n    }\n    static #_ = this.ɵfac = function TicketService_Factory(t) {\n      return new (t || TicketService)();\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TicketService,\n      factory: TicketService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return TicketService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}